openapi: 3.0.0
info:
  title: Request Documentation API
  version: 1.0.0
  description: API for handling document requests.
servers:
  - url: "http://localhost:3000"
    description: Local server

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key

paths:
  /document-requests/documents:
    get:
      summary: Retrieve all documents
      description: Fetches a list of documents by language.
      security:
        - ApiKeyAuth: [] # Requires x-api-key header
      parameters:
        - in: query
          name: lang
          required: false
          schema:
            type: string
          description: The language of the documents (default is "en")
      responses:
        200:
          description: A list of documents
          content:
            application/json:
              schema:
                type: object
                properties:
                  language:
                    type: string
                  documents:
                    type: array
                    items:
                      type: object
                      properties:
                        doc_key:
                          type: string
                        value:
                          type: string

  /document-requests:
    post:
      summary: Create a document request
      description: Allows clients to request documentation from their customers.
      security:
        - ApiKeyAuth: [] # Requires x-api-key header
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer:
                  type: object
                  required: [id, name, email, languagePreference]
                  properties:
                    id:
                      type: string
                      description: Unique identifier for the customer
                    name:
                      type: string
                      description: Full name of the customer
                    email:
                      type: string
                      format: email
                      description: Email of the customer
                    languagePreference:
                      type: string
                      description: Preferred language of the customer (e.g., "en", "pt")
                documents:
                  type: array
                  items:
                    type: object
                    required: [key, quantity]
                    properties:
                      key:
                        type: string
                        description: Unique key representing the document type
                      quantity:
                        type: integer
                        description: Number of copies required
      responses:
        201:
          description: Document request created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  requestId:
                    type: string
                    description: Unique ID of the created request
                  message:
                    type: string
                    example: "Document request created successfully"
        400:
          description: Bad request, missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid request format"
  /document/upload:
    get:
      summary: Retrieve document upload details
      description: Fetches details for document upload using a token.
      parameters:
        - in: query
          name: token
          required: true
          schema:
            type: string
          description: Unique token identifying the document upload request
      responses:
        200:
          description: Details of the document upload request
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                  box_key:
                    type: string
                  unique_link:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  expiry_date:
                    type: string
                    format: date-time
                  status:
                    type: string
                  language:
                    type: string
                  documents:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                        quantity:
                          type: integer
